1) data SEGMENT
	01)    DATA - (4) T_IDENTIFIER
	02) SEGMENT - (7) T_DIRECTIVE
<name (1,1)> <mnem (2,1)> 

2) var1 dw 22aeh
	01)  VAR1 - (4) T_IDENTIFIER
	02)    DW - (2) T_DIRECTIVE
	03) 22AEH - (5) T_HEX
<name (1,1)> <mnem (2,1)> <op (3,1)>

3) strv db 'Lorem ipsum dolor sit amet'
	01)                         STRV - (4) T_IDENTIFIER
	02)                           DB - (2) T_DIRECTIVE
	03) 'Lorem ipsum dolor sit amet' - (28) T_STRING
<name (1,1)> <mnem (2,1)> <op (3,1)>

4) bvar db 10010101b
	01)      BVAR - (4) T_IDENTIFIER
	02)        DB - (2) T_DIRECTIVE
	03) 10010101B - (9) T_BIN
<name (1,1)> <mnem (2,1)> <op (3,1)>

5) dwVr dd 0a184dh
	01)    DWVR - (4) T_IDENTIFIER
	02)      DD - (2) T_DIRECTIVE
	03) 0A184DH - (7) T_HEX
<name (1,1)> <mnem (2,1)> <op (3,1)>

6) data ENDS
	01) DATA - (4) T_IDENTIFIER
	02) ENDS - (4) T_DIRECTIVE
<name (1,1)> <mnem (2,1)> 

7) 
<empty>

8) dfnd equ [esp + esi - 7]
	01)            DFND - (4) T_IDENTIFIER
	02)             EQU - (3) T_DIRECTIVE
	03) [esp + esi - 7] - (15) T_EQU_SUB
<name (1,1)> <mnem (2,1)> <op (3,1)>

9) thr equ 1a65e7h
	01)     THR - (3) T_IDENTIFIER
	02)     EQU - (3) T_DIRECTIVE
	03) 1a65e7h - (7) T_EQU_SUB
<name (1,1)> <mnem (2,1)> <op (3,1)>

10) 
<empty>

11) code SEGMENT
	01)    CODE - (4) T_IDENTIFIER
	02) SEGMENT - (7) T_DIRECTIVE
<name (1,1)> <mnem (2,1)> 

12) vv db 2h
	01) VV - (2) T_IDENTIFIER
	02) DB - (2) T_DIRECTIVE
	03) 2H - (2) T_HEX
<name (1,1)> <mnem (2,1)> <op (3,1)>

13) ddw dd 17124612
	01)      DDW - (3) T_IDENTIFIER
	02)       DD - (2) T_DIRECTIVE
	03) 17124612 - (8) T_DEC
<name (1,1)> <mnem (2,1)> <op (3,1)>

14) 
<empty>

15) start:
	01) START - (5) T_IDENTIFIER
	02)     : - (1) T_COLON
<label (1,2)> 

16) and [edx + edi - 7], eax
	01) AND - (3) T_INSTRUCTION
	02)   [ - (1) T_OPEN_BRACKET
	03) EDX - (3) T_GENERAL_REG32
	04)   + - (1) T_PLUS
	05) EDI - (3) T_GENERAL_REG32
	06)   - - (1) T_MINUS
	07)   7 - (1) T_DEC
	08)   ] - (1) T_CLOSE_BRACKET
	09)   , - (1) T_COMMA
	10) EAX - (3) T_GENERAL_REG32
<mnem (1,1)> <op (2,7)>, <op (10,1)>

17) neg dwVr
	01)  NEG - (3) T_INSTRUCTION
	02) DWVR - (4) T_IDENTIFIER
<mnem (1,1)> <op (2,1)>

18) jb sml
	01)  JB - (2) T_INSTRUCTION
	02) SML - (3) T_IDENTIFIER
<mnem (1,1)> <op (2,1)>

19) and dfnd, ebp
	01) AND - (3) T_INSTRUCTION
	02)   [ - (1) T_OPEN_BRACKET
	03) ESP - (3) T_GENERAL_REG32
	04)   + - (1) T_PLUS
	05) ESI - (3) T_GENERAL_REG32
	06)   - - (1) T_MINUS
	07)   7 - (1) T_DEC
	08)   ] - (1) T_CLOSE_BRACKET
	09)   , - (1) T_COMMA
	10) EBP - (3) T_GENERAL_REG32
<mnem (1,1)> <op (2,7)>, <op (10,1)>

20) xor vv, 10h
	01) XOR - (3) T_INSTRUCTION
	02)  VV - (2) T_IDENTIFIER
	03)   , - (1) T_COMMA
	04) 10H - (3) T_HEX
<mnem (1,1)> <op (2,1)>, <op (4,1)>

21) lbl:
	01) LBL - (3) T_IDENTIFIER
	02)   : - (1) T_COLON
<label (1,2)> 

22) cmp cl, strv
	01)  CMP - (3) T_INSTRUCTION
	02)   CL - (2) T_GENERAL_REG08
	03)    , - (1) T_COMMA
	04) STRV - (4) T_IDENTIFIER
<mnem (1,1)> <op (2,1)>, <op (4,1)>

23) xor [ebp + ecx + 2], 1a3e5fh
	01)     XOR - (3) T_INSTRUCTION
	02)       [ - (1) T_OPEN_BRACKET
	03)     EBP - (3) T_GENERAL_REG32
	04)       + - (1) T_PLUS
	05)     ECX - (3) T_GENERAL_REG32
	06)       + - (1) T_PLUS
	07)       2 - (1) T_DEC
	08)       ] - (1) T_CLOSE_BRACKET
	09)       , - (1) T_COMMA
	10) 1A3E5FH - (7) T_HEX
<mnem (1,1)> <op (2,7)>, <op (10,1)>

24) jmp sml
	01) JMP - (3) T_INSTRUCTION
	02) SML - (3) T_IDENTIFIER
<mnem (1,1)> <op (2,1)>

25) xor ss:dfnd, 0a141fh
	01)     XOR - (3) T_INSTRUCTION
	02)      SS - (2) T_SEGMENT_REG
	03)       : - (1) T_COLON
	04)       [ - (1) T_OPEN_BRACKET
	05)     ESP - (3) T_GENERAL_REG32
	06)       + - (1) T_PLUS
	07)     ESI - (3) T_GENERAL_REG32
	08)       - - (1) T_MINUS
	09)       7 - (1) T_DEC
	10)       ] - (1) T_CLOSE_BRACKET
	11)       , - (1) T_COMMA
	12) 0A141FH - (7) T_HEX
<mnem (1,1)> <op (2,9)>, <op (12,1)>

26) cmp edi, [eax + ebp + 2]
	01) CMP - (3) T_INSTRUCTION
	02) EDI - (3) T_GENERAL_REG32
	03)   , - (1) T_COMMA
	04)   [ - (1) T_OPEN_BRACKET
	05) EAX - (3) T_GENERAL_REG32
	06)   + - (1) T_PLUS
	07) EBP - (3) T_GENERAL_REG32
	08)   + - (1) T_PLUS
	09)   2 - (1) T_DEC
	10)   ] - (1) T_CLOSE_BRACKET
<mnem (1,1)> <op (2,1)>, <op (4,7)>

27) xor gs:dwVr, 11b
	01)  XOR - (3) T_INSTRUCTION
	02)   GS - (2) T_SEGMENT_REG
	03)    : - (1) T_COLON
	04) DWVR - (4) T_IDENTIFIER
	05)    , - (1) T_COMMA
	06)  11B - (3) T_BIN
<mnem (1,1)> <op (2,3)>, <op (6,1)>

28) cmp ecx, ddw
	01) CMP - (3) T_INSTRUCTION
	02) ECX - (3) T_GENERAL_REG32
	03)   , - (1) T_COMMA
	04) DDW - (3) T_IDENTIFIER
<mnem (1,1)> <op (2,1)>, <op (4,1)>

29) 
<empty>

30) sml:    bt eax, ebx
	01) SML - (3) T_IDENTIFIER
	02)   : - (1) T_COLON
	03)  BT - (2) T_INSTRUCTION
	04) EAX - (3) T_GENERAL_REG32
	05)   , - (1) T_COMMA
	06) EBX - (3) T_GENERAL_REG32
<label (1,2)> <mnem (3,1)> <op (4,1)>, <op (6,1)>

31) cmp dl, byte ptr dwVr
	01)  CMP - (3) T_INSTRUCTION
	02)   DL - (2) T_GENERAL_REG08
	03)    , - (1) T_COMMA
	04) BYTE - (4) T_TYPE
	05)  PTR - (3) T_PTR
	06) DWVR - (4) T_IDENTIFIER
<mnem (1,1)> <op (2,1)>, <op (4,3)>

32) db '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'
	01)                                                                                                                             DB - (2) T_DIRECTIVE
	02) '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000' - (126) T_STRING
<mnem (1,1)> <op (2,1)>

33) lbl1:
	01) LBL1 - (4) T_IDENTIFIER
	02)    : - (1) T_COLON
<label (1,2)> 

34) sar ebp, 1
	01) SAR - (3) T_INSTRUCTION
	02) EBP - (3) T_GENERAL_REG32
	03)   , - (1) T_COMMA
	04)   1 - (1) T_DEC
<mnem (1,1)> <op (2,1)>, <op (4,1)>

35) stosb
	01) STOSB - (5) T_INSTRUCTION
<mnem (1,1)> 

36) and fs:strv, dh
	01)  AND - (3) T_INSTRUCTION
	02)   FS - (2) T_SEGMENT_REG
	03)    : - (1) T_COLON
	04) STRV - (4) T_IDENTIFIER
	05)    , - (1) T_COMMA
	06)   DH - (2) T_GENERAL_REG08
<mnem (1,1)> <op (2,3)>, <op (6,1)>

37) jb sml
	01)  JB - (2) T_INSTRUCTION
	02) SML - (3) T_IDENTIFIER
<mnem (1,1)> <op (2,1)>

38) stosb
	01) STOSB - (5) T_INSTRUCTION
<mnem (1,1)> 

39) sar bl, 1
	01) SAR - (3) T_INSTRUCTION
	02)  BL - (2) T_GENERAL_REG08
	03)   , - (1) T_COMMA
	04)   1 - (1) T_DEC
<mnem (1,1)> <op (2,1)>, <op (4,1)>

40) cmp dh, byte ptr [edi + esi + 12h]
	01)  CMP - (3) T_INSTRUCTION
	02)   DH - (2) T_GENERAL_REG08
	03)    , - (1) T_COMMA
	04) BYTE - (4) T_TYPE
	05)  PTR - (3) T_PTR
	06)    [ - (1) T_OPEN_BRACKET
	07)  EDI - (3) T_GENERAL_REG32
	08)    + - (1) T_PLUS
	09)  ESI - (3) T_GENERAL_REG32
	10)    + - (1) T_PLUS
	11)  12H - (3) T_HEX
	12)    ] - (1) T_CLOSE_BRACKET
<mnem (1,1)> <op (2,1)>, <op (4,9)>

41) jmp lbl1
	01)  JMP - (3) T_INSTRUCTION
	02) LBL1 - (4) T_IDENTIFIER
<mnem (1,1)> <op (2,1)>

42) neg byte ptr [eax + ebx + 2]
	01)  NEG - (3) T_INSTRUCTION
	02) BYTE - (4) T_TYPE
	03)  PTR - (3) T_PTR
	04)    [ - (1) T_OPEN_BRACKET
	05)  EAX - (3) T_GENERAL_REG32
	06)    + - (1) T_PLUS
	07)  EBX - (3) T_GENERAL_REG32
	08)    + - (1) T_PLUS
	09)    2 - (1) T_DEC
	10)    ] - (1) T_CLOSE_BRACKET
<mnem (1,1)> <op (2,9)>

43) 
<empty>

44) code ENDS
	01) CODE - (4) T_IDENTIFIER
	02) ENDS - (4) T_DIRECTIVE
<name (1,1)> <mnem (2,1)> 

45) END
	01) END - (3) T_DIRECTIVE
<mnem (1,1)> 

